[
  {
    "objectID": "workflow_micro_NYC.html",
    "href": "workflow_micro_NYC.html",
    "title": "workflow_micro_NYC",
    "section": "",
    "text": "For exploratory analysis, I used the street tree in NYC, with the phenology information established by Yiluan. These trees are part of the whole inventory, covering only 14 genera and being sampled. I select the trees which are within 500-m buffer around the weather underground sites (see Figure 1).\n\n\nCode\npoints_in_buffer_sf &lt;- points_in_buffer %&gt;%\n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326)\nboundary &lt;- st_read(\"~/urban-cooling/data/raw/WU/NY/Untitled/nybb_dissolved.shp\") %&gt;%\n  st_transform(4326)\n\n\nReading layer `nybb_dissolved' from data source \n  `/Volumes/seas-zhukai/proj-urban-cooling/data/raw/WU/NY/Untitled/nybb_dissolved.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 1 field\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 913175.1 ymin: 120128.4 xmax: 1067383 ymax: 272844.3\nProjected CRS: NAD83 / New York Long Island (ftUS)\n\n\nCode\nggplot() +\n  geom_sf(data = boundary, fill = \"grey\") +\n  geom_sf(data = wu_location, color = \"blue\", size = 1) +\n  geom_sf(data = points_in_buffer_sf, color = \"red\", size = 0.05) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nFigure 1: Location of WU sites and trees\n\n\n\n\n\n\n\n\nThere are 4 raw daily variables selected, i.e. AvgTemp, HighTemp, LowTemp and Precipitation_sum (Sum_mm). I flagged the records which are unknown or questionable according to the methods applied by Global Historical Climatology Network daily GHCNd.\n\n\nCode\n# all_sites_temp &lt;- read_clean_WU(city = \"ST\", run_checks = TRUE)\nall_sites_temp &lt;- readRDS(\"~/urban-cooling/data/raw/WU/NY/NY_wu.rds\") %&gt;%\n  dplyr::select(c(Date, HighTemp, AvgTemp, LowTemp, Sum_mm, name))\n\n\n\n\n\n\n\nCode\n# download\nsrad_daily &lt;- readRDS(\"~/phenology-urban/data/raw/NY/Daymet/daily2016-2024/srad_daily_2016-2023.rds\")"
  },
  {
    "objectID": "workflow_micro_NYC.html#insert-tree-id-base-on-wu-data",
    "href": "workflow_micro_NYC.html#insert-tree-id-base-on-wu-data",
    "title": "workflow_micro_NYC",
    "section": "",
    "text": "For exploratory analysis, I used the street tree in NYC, with the phenology information established by Yiluan. These trees are part of the whole inventory, covering only 14 genera and being sampled. I select the trees which are within 500-m buffer around the weather underground sites.\n\n\nCode\n################ For phenology data ################\n\nmetadata &lt;- read_csv(\"~/lab-data/datasets/vegetation/PS/urban/metadata.csv\") %&gt;%\n  filter(site == \"NY\")\n\nfile_list &lt;- list.files(path = \"~/lab-data/datasets/vegetation/PS/urban/doy/\", pattern = \"^doy_NY_.*\\\\.rds$\", full.names = TRUE)\ndata_list &lt;- file_list %&gt;%\n  map(~ readRDS(.x))\nny_now &lt;- bind_rows(data_list)\n\ntree_location &lt;- metadata %&gt;%\n  mutate(genus = str_extract(taxa, \"^[^ ]+\")) %&gt;%\n  left_join(ny_now, by = \"id\") %&gt;%\n  filter(!is.na(doy)) %&gt;%\n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326)\n\nwu_location &lt;- read_csv(\"~/urban-cooling/data/raw/WU/NY/location.csv\") %&gt;%\n  st_as_sf(coords = c(\"Lon\", \"Lat\"), crs = 4326)\nwu_buffer &lt;- st_buffer(wu_location, dist = 500)\n\nintersects &lt;- st_intersects(tree_location, wu_buffer)\npoints_in_buffer &lt;- tree_location[lengths(intersects) &gt; 0, ]\npoints_in_buffer &lt;- tree_location %&gt;%\n  mutate(buffer_id = sapply(intersects, function(x) if (length(x) &gt; 0) x[1] else NA)) %&gt;% \n  left_join(wu_buffer %&gt;% st_drop_geometry() %&gt;% mutate(buffer_id = row_number()), by = \"buffer_id\") %&gt;%\n  filter(!is.na(buffer_id)) %&gt;%\n  select(-buffer_id)\n\n# write_csv(points_in_buffer, \"~/phenology-urban/data/proc/nyc/tree_WU_500_buffer_PS.csv\")\n# points_in_buffer &lt;- read_csv(\"data/proc/nyc/tree_WU_500_buffer_PS.csv\")\n\n\n\n\nCode\nnyboundary &lt;- st_read(\"~/urban-cooling/data/raw/NYC/boundary/nybb_dissolved.shp\") %&gt;%\n  st_transform(4326)\n\n\nReading layer `nybb_dissolved' from data source \n  `/Volumes/seas-zhukai/proj-urban-cooling/data/raw/NYC/boundary/nybb_dissolved.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 1 field\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 913175.1 ymin: 120128.4 xmax: 1067383 ymax: 272844.3\nProjected CRS: NAD83 / New York Long Island (ftUS)\n\n\nCode\nggplot() +\n  geom_sf(data = nyboundary, fill = \"grey\") +\n  geom_sf(data = wu_location, color = \"blue\", size = 1) +\n  geom_sf(data = points_in_buffer, color = \"red\", size = 0.05) +\n  theme_minimal()\n\n\n\n\n\nLocation of WU sites and trees"
  },
  {
    "objectID": "workflow_micro_NYC.html#creat-the-climate-variable",
    "href": "workflow_micro_NYC.html#creat-the-climate-variable",
    "title": "workflow_micro_NYC",
    "section": "2. Creat the climate variable",
    "text": "2. Creat the climate variable\n\n2.1 Read and clean the WU data (based on GHCNd)\nThere are 4 raw daily variables selected, i.e. AvgTemp, HighTemp, LowTemp and Precipitation_sum (Sum_mm). I flagged the records which are unknown or questionable according to the methods applied by Global Historical Climatology Network daily GHCNd.\n\n\nCode\n# source(\"script/read_clean_WU.R\")\n# all_sites_temp &lt;- read_clean_WU(city = \"NY\", run_checks = TRUE)\nall_sites_temp &lt;- readRDS(\"~/urban-cooling/data/raw/WU/NY/NY_wu.rds\") %&gt;%\n  select(c(Date, HighTemp, AvgTemp, LowTemp, Sum_mm, name))\n\n\n\n\n2.2 Create seasonal temp/prcp variables\nThe seasonal variable is calculated for each site, year, and season. The season is defined as Winter: December(last year) to February, Spring: March to May, Summer: June to August, Fall: September to November.\n\n\nCode\n# filtered_seasonal_data &lt;- all_sites_temp %&gt;%\n#   mutate(\n#     year = year(Date),\n#     month = month(Date),\n#     season = case_when(\n#       month %in% 3:5 ~ \"spring\",\n#       month %in% 6:8 ~ \"summer\",\n#       month %in% 9:11 ~ \"fall\",\n#       TRUE ~ \"winter\"\n#     ),\n#     year = if_else(month == 12, year + 1, year)\n#   ) %&gt;%\n#   group_by(name, year, season, month) %&gt;%\n#   summarise(\n#     across(c(HighTemp, AvgTemp, LowTemp, Sum_mm), ~ sum(!is.na(.)), .names = \"count_{.col}\"),\n#     .groups = \"drop\"\n#   ) %&gt;%\n#   group_by(name, year, season) %&gt;%\n#   summarise(\n#     across(starts_with(\"count_\"), ~ sum(. &gt;= 10), .names = \"valid_months_{.col}\"),\n#     .groups = \"drop\"\n#   )\n# \n# seasonal_temp &lt;- all_sites_temp %&gt;%\n#   mutate(\n#     year = year(Date),\n#     month = month(Date),\n#     season = case_when(\n#       month %in% 3:5 ~ \"spring\",\n#       month %in% 6:8 ~ \"summer\",\n#       month %in% 9:11 ~ \"fall\",\n#       TRUE ~ \"winter\"\n#     ),\n#     year = if_else(month == 12, year + 1, year)\n#   ) %&gt;%\n#   # semi_join(valid_combinations, by = c(\"name\", \"year\", \"season\")) %&gt;%\n#   group_by(name, year, season) %&gt;%\n#   summarise(\n#     Avg_HighTemp = mean(HighTemp, na.rm = TRUE),\n#     Avg_AvgTemp = mean(AvgTemp, na.rm = TRUE),\n#     Avg_LowTemp = mean(LowTemp, na.rm = TRUE),\n#     Sum_Sum_mm = sum(Sum_mm, na.rm = TRUE),\n#     .groups = \"drop\"\n#   ) %&gt;%\n#   left_join(\n#     filtered_seasonal_data,\n#     by = c(\"name\", \"year\", \"season\")\n#   ) %&gt;%\n#   mutate(\n#     Avg_HighTemp = if_else(valid_months_count_HighTemp == 3, Avg_HighTemp, NA_real_),\n#     Avg_AvgTemp = if_else(valid_months_count_AvgTemp == 3, Avg_AvgTemp, NA_real_),\n#     Avg_LowTemp = if_else(valid_months_count_LowTemp == 3, Avg_LowTemp, NA_real_),\n#     Sum_Sum_mm = if_else(valid_months_count_Sum_mm == 3, Sum_Sum_mm, NA_real_)\n#   ) %&gt;%\n#   select(name, year, season, Avg_HighTemp, Avg_AvgTemp, Avg_LowTemp, Sum_Sum_mm) %&gt;%\n#   pivot_wider(\n#     names_from = season,\n#     values_from = c(Avg_HighTemp, Avg_AvgTemp, Avg_LowTemp, Sum_Sum_mm),\n#     names_glue = \"{.value}_{season}\"\n#   )\n# \n# seasonal_temp_doy &lt;- points_in_buffer %&gt;%\n#   left_join(seasonal_temp, by = c(\"Site\" = \"name\", \"year\" = \"year\"))\n# \n# saveRDS(seasonal_temp_doy, \"~/phenology-urban/data/proc/nyc/seasonal_doy.rds\")\n\nseasonal_temp_doy &lt;- readRDS(\"~/phenology-urban/data/proc/nyc/seasonal_doy.rds\")\nhead(seasonal_temp_doy)\n\n\n# A tibble: 6 × 29\n    ...1     id taxa         site  genus  year start   end direction thres   doy\n   &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1 856615 187268 Carya glabra NY    Carya  2017    11   173 up          0      11\n2 856615 187268 Carya glabra NY    Carya  2017    11   173 up          0.1    35\n3 856615 187268 Carya glabra NY    Carya  2017    11   173 up          0.2    55\n4 856615 187268 Carya glabra NY    Carya  2017    11   173 up          0.3    75\n5 856615 187268 Carya glabra NY    Carya  2017    11   173 up          0.4    87\n6 856615 187268 Carya glabra NY    Carya  2017    11   173 up          0.5    96\n# ℹ 18 more variables: geometry &lt;chr&gt;, Site &lt;chr&gt;, Avg_HighTemp_fall &lt;dbl&gt;,\n#   Avg_HighTemp_spring &lt;dbl&gt;, Avg_HighTemp_summer &lt;dbl&gt;,\n#   Avg_HighTemp_winter &lt;dbl&gt;, Avg_AvgTemp_fall &lt;dbl&gt;,\n#   Avg_AvgTemp_spring &lt;dbl&gt;, Avg_AvgTemp_summer &lt;dbl&gt;,\n#   Avg_AvgTemp_winter &lt;dbl&gt;, Avg_LowTemp_fall &lt;dbl&gt;, Avg_LowTemp_spring &lt;dbl&gt;,\n#   Avg_LowTemp_summer &lt;dbl&gt;, Avg_LowTemp_winter &lt;dbl&gt;, Sum_Sum_mm_fall &lt;dbl&gt;,\n#   Sum_Sum_mm_spring &lt;dbl&gt;, Sum_Sum_mm_summer &lt;dbl&gt;, Sum_Sum_mm_winter &lt;dbl&gt;"
  },
  {
    "objectID": "workflow_micro_NYC.html#explore-the-relationship-between-temperature-and-phenology",
    "href": "workflow_micro_NYC.html#explore-the-relationship-between-temperature-and-phenology",
    "title": "workflow_micro_NYC",
    "section": "3 Explore the relationship between temperature and phenology",
    "text": "3 Explore the relationship between temperature and phenology\n\n3.1 Seasonal climate variables\nI chose the Acer genus, 50% threshold as an example to plot the relationship. Overall, the warmer the winter/spring temperature, the earlier the spring phenology. The precipitation has no significant impact.\n\nCode\nseasonal_temp_doy &lt;- readRDS(\"~/phenology-urban/data/proc/nyc/seasonal_doy.rds\") %&gt;%\n  mutate(time_length = doy - start) %&gt;%\n  filter(direction ==\"up\" & thres == 0.5 & genus == \"Acer\")\n\ncreate_scatter_plot(\n  data = seasonal_temp_doy, \n  x_var = \"Avg_AvgTemp_spring\", \n  y_var = \"doy\",\n  title = \"Relationship between seasonal temperature and spring phenology\"\n)\n\ncreate_scatter_plot(\n  data = seasonal_temp_doy, \n  x_var = \"Avg_LowTemp_spring\", \n  y_var = \"doy\",\n  title = \"Relationship between seasonal temperature and spring phenology\"\n)\ncreate_scatter_plot(\n  data = seasonal_temp_doy, \n  x_var = \"Avg_HighTemp_spring\", \n  y_var = \"doy\",\n  title = \"Relationship between seasonal temperature and spring phenology\"\n)\n\ncreate_scatter_plot(\n  data = seasonal_temp_doy, \n  x_var = \"Sum_Sum_mm_spring\", \n  y_var = \"doy\",\n  title = \"Relationship between seasonal precipitation and spring phenology\"\n)\n\ncreate_scatter_plot(\n  data = seasonal_temp_doy, \n  x_var = \"Avg_AvgTemp_winter\", \n  y_var = \"doy\",\n  title = \"Relationship between seasonal temperature and spring phenology\"\n)\ncreate_scatter_plot(\n  data = seasonal_temp_doy, \n  x_var = \"Avg_LowTemp_winter\", \n  y_var = \"doy\",\n  title = \"Relationship between seasonal temperature and spring phenology\"\n)\n\n\ncreate_scatter_plot(\n  data = seasonal_temp_doy, \n  x_var = \"Avg_HighTemp_winter\", \n  y_var = \"doy\",\n  title = \"Relationship between seasonal temperature and spring phenology\"\n)\n\n\ncreate_scatter_plot(\n  data = seasonal_temp_doy, \n  x_var = \"Sum_Sum_mm_winter\", \n  y_var = \"doy\",\n  title = \"Relationship between seasonal precipitation and spring phenology\"\n)\n\n\n\n\n\n\n\nSpring average temp.\n\n\n\n\n\n\n\nSpring low temp.\n\n\n\n\n\n\n\nSpring high temp.\n\n\n\n\n\n\n\nSpring prcp. sum\n\n\n\n\n\n\n\n\n\nWinter average temp.\n\n\n\n\n\n\n\nWinter low temp.\n\n\n\n\n\n\n\nWinter high temp.\n\n\n\n\n\n\n\nWinter prcp. sum\n\n\n\n\n\n\nRelationship between seasonal climate and spring phenology\n\n\n\nOverall, the warmer the summer temperature, the later the fall phenology. Other relationship are not significant.\n\nCode\nseasonal_temp_doy &lt;- readRDS(\"~/phenology-urban/data/proc/nyc/seasonal_doy.rds\") %&gt;%\n  mutate(time_length = doy - start) %&gt;%\n  filter(direction ==\"down\" & thres == 0.5 & genus == \"Acer\")\n\ncreate_scatter_plot(\n  data = seasonal_temp_doy, \n  x_var = \"Avg_AvgTemp_summer\", \n  y_var = \"doy\",\n  title = \"Relationship between seasonal temperature and fall phenology\"\n)\n\ncreate_scatter_plot(\n  data = seasonal_temp_doy, \n  x_var = \"Avg_LowTemp_summer\", \n  y_var = \"doy\",\n  title = \"Relationship between seasonal temperature and fall phenology\"\n)\n\ncreate_scatter_plot(\n  data = seasonal_temp_doy, \n  x_var = \"Avg_HighTemp_summer\", \n  y_var = \"doy\",\n  title = \"Relationship between seasonal temperature and fall phenology\"\n)\n\n\ncreate_scatter_plot(\n  data = seasonal_temp_doy, \n  x_var = \"Sum_Sum_mm_summer\", \n  y_var = \"doy\",\n  title = \"Relationship between seasonal precipitation and fall phenology\"\n)\ncreate_scatter_plot(\n  data = seasonal_temp_doy, \n  x_var = \"Avg_AvgTemp_fall\", \n  y_var = \"doy\",\n  title = \"Relationship between seasonal temperature and fall phenology\"\n)\n\ncreate_scatter_plot(\n  data = seasonal_temp_doy, \n  x_var = \"Avg_LowTemp_fall\", \n  y_var = \"doy\",\n  title = \"Relationship between seasonal temperature and fall phenology\"\n)\n\ncreate_scatter_plot(\n  data = seasonal_temp_doy, \n  x_var = \"Avg_HighTemp_fall\", \n  y_var = \"doy\",\n  title = \"Relationship between seasonal temperature and fall phenology\"\n)\n\ncreate_scatter_plot(\n  data = seasonal_temp_doy, \n  x_var = \"Sum_Sum_mm_fall\", \n  y_var = \"doy\",\n  title = \"Relationship between seasonal precipitation and fall phenology\"\n)\n\n\n\n\n\n\n\nSummer average temp.\n\n\n\n\n\n\n\nSummer low temp.\n\n\n\n\n\n\n\nSummer high temp.\n\n\n\n\n\n\n\nSummer prcp. sum\n\n\n\n\n\n\n\n\n\nFall average temp.\n\n\n\n\n\n\n\nFall low temp.\n\n\n\n\n\n\n\nFall high temp.\n\n\n\n\n\n\n\nFall prcp. sum\n\n\n\n\n\n\nRelationship between seasonal climate and fall phenology\n\n\n\nIn the mixed effect model, I treated the genus as a random effect.\nFor spring phenology\n\n\nCode\nseasonal_temp_doy &lt;- readRDS(\"~/phenology-urban/data/proc/nyc/seasonal_doy.rds\") %&gt;%\n  mutate(time_length = doy - start) %&gt;%\n  filter(direction ==\"up\" & thres == 0.5)\n\nmodel &lt;- lmer(doy ~ Avg_AvgTemp_winter  + Sum_Sum_mm_winter  +\n                (1 | genus), \n              data = seasonal_temp_doy)\n\nfixed_effects &lt;- tidy(model, effects = \"fixed\")\n\nfixed_effects_table &lt;- fixed_effects %&gt;%\n  select(term, estimate, std.error, statistic) %&gt;%\n  mutate(\n    estimate = round(estimate, 3),\n    std.error = round(std.error, 3),\n    p.value = signif(2 * (1 - pnorm(abs(statistic))), 3)\n  )\n\nkable(fixed_effects_table, format = \"markdown\", col.names = c(\"Term\", \"Estimate\", \"Std. Error\", \"t value\", \"P-Value\"))\n\n\n\nCoefficents for model (spring phenology ~ winter climate)\n\n\nTerm\nEstimate\nStd. Error\nt value\nP-Value\n\n\n\n\n(Intercept)\n126.657\n0.817\n154.935641\n0.0e+00\n\n\nAvg_AvgTemp_winter\n-2.125\n0.107\n-19.891618\n0.0e+00\n\n\nSum_Sum_mm_winter\n-0.009\n0.002\n-4.538583\n5.7e-06\n\n\n\n\n\n\n\nCode\nseasonal_temp_doy &lt;- readRDS(\"~/phenology-urban/data/proc/nyc/seasonal_doy.rds\") %&gt;%\n  mutate(time_length = doy - start) %&gt;%\n  filter(direction ==\"down\" & thres == 0.5)\n\nmodel &lt;- lmer(doy ~ Avg_AvgTemp_summer  + Sum_Sum_mm_summer  +\n                (1 | genus), \n              data = seasonal_temp_doy)\n\nfixed_effects &lt;- tidy(model, effects = \"fixed\")\n\nfixed_effects_table &lt;- fixed_effects %&gt;%\n  select(term, estimate, std.error, statistic) %&gt;%\n  mutate(\n    estimate = round(estimate, 3),\n    std.error = round(std.error, 3),\n    p.value = signif(2 * (1 - pnorm(abs(statistic))), 3)\n  )\n\nkable(fixed_effects_table, format = \"markdown\", col.names = c(\"Term\", \"Estimate\", \"Std. Error\", \"t value\", \"P-Value\"))\n\n\n\nCoefficents for model (fall phenology ~ summer climate)\n\n\nTerm\nEstimate\nStd. Error\nt value\nP-Value\n\n\n\n\n(Intercept)\n234.981\n7.622\n30.827566\n0.00000\n\n\nAvg_AvgTemp_summer\n2.345\n0.301\n7.799551\n0.00000\n\n\nSum_Sum_mm_summer\n0.005\n0.002\n2.876526\n0.00402\n\n\n\n\n\n\n\n3.2 Event period climate\n\n\n3.2.1 Create period temp/prcp variables\nThe seasonal climate variables use a fixed pre-season for every trees, not allowing heterogeneity within city. Also, the roughly divided season make it difficult to connect to phenology process, e.g. chilling and forcing accumulation. Therefore, some studies use varing preseason or optimal preseason.\nMeng et al., 2020, Wang et al., 2021: The preseason was defined as the period from November 1st in the previous year to the time of SOS in the current year. (most fixed)\nMeng et al., 2020, Yin et al., 2024: For each city, the period for which the absolute value of the partial correlation coefficient between SOS and Temp was highest was considered the optimal length of the preseason most relevant to SOS. (more flexible, cadidate time: 0 to 6 months prior to SOS, 5-day interval approach from January 1st to the average SOS date)\nMost flexible: The period variable is calculated for each site, year, and growing period. The period is defined as the period between the start of the phenology event and the day of year when the tree reaches the event threshold.\n\n\n\nDefinition of period\n\n\n\n\nCode\n# growing_temp_doy &lt;- points_in_buffer %&gt;%\n#   mutate(\n#     start_date = make_date(year) + days(start - 1), \n#     end_date = make_date(year) + days(doy - 1)\n#   ) %&gt;%\n#   rowwise() %&gt;%\n#   mutate(\n#     stats = list({\n#       current_index &lt;- cur_group_id()\n#       if (current_index %% 2000 == 0) {\n#         cat(\"Processing row:\", current_index, \"out of\", nrow(points_in_buffer), \"\\n\")\n#       }\n#       all_sites_temp %&gt;%\n#         filter(\n#           name == Site,\n#           Date &gt;= start_date & Date &lt;= end_date\n#         ) %&gt;%\n#         summarise(\n#           LowTemp_mean = mean(LowTemp, na.rm = TRUE),\n#           LowTemp_count = sum(!is.na(LowTemp)),\n#           AvgTemp_mean = mean(AvgTemp, na.rm = TRUE),\n#           AvgTemp_count = sum(!is.na(AvgTemp)),\n#           HighTemp_mean = mean(HighTemp, na.rm = TRUE),\n#           HighTemp_count = sum(!is.na(HighTemp)),\n#           Sum_mm_sum = sum(Sum_mm, na.rm = TRUE),\n#           Sum_mm_count = sum(!is.na(Sum_mm))\n#         )\n#     })\n#   ) %&gt;%\n#   unnest(stats)%&gt;%\n#   mutate(\n#     time_length = as.numeric(end_date - start_date, units = \"days\")\n#   )\n# \n# saveRDS(growing_temp_doy, \"~/phenology-urban/data/proc/nyc/growing_doy.rds\")\n\ngrowing_temp_doy &lt;- readRDS(\"~/phenology-urban/data/proc/nyc/growing_doy.rds\")\nhead(growing_temp_doy)\n\n\n# A tibble: 6 × 24\n    ...1     id taxa         site  genus  year start   end direction thres   doy\n   &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1 856615 187268 Carya glabra NY    Carya  2017    11   173 up          0      11\n2 856615 187268 Carya glabra NY    Carya  2017    11   173 up          0.1    35\n3 856615 187268 Carya glabra NY    Carya  2017    11   173 up          0.2    55\n4 856615 187268 Carya glabra NY    Carya  2017    11   173 up          0.3    75\n5 856615 187268 Carya glabra NY    Carya  2017    11   173 up          0.4    87\n6 856615 187268 Carya glabra NY    Carya  2017    11   173 up          0.5    96\n# ℹ 13 more variables: geometry &lt;chr&gt;, Site &lt;chr&gt;, start_date &lt;date&gt;,\n#   end_date &lt;date&gt;, LowTemp_mean &lt;dbl&gt;, LowTemp_count &lt;int&gt;,\n#   AvgTemp_mean &lt;dbl&gt;, AvgTemp_count &lt;int&gt;, HighTemp_mean &lt;dbl&gt;,\n#   HighTemp_count &lt;int&gt;, Sum_mm_sum &lt;dbl&gt;, Sum_mm_count &lt;int&gt;,\n#   time_length &lt;dbl&gt;\n\n\nThe period_desc is defined as the period between the day of year when the tree reaches the event threshold and the end of phenology event.\n\n\nCode\n# growing_temp_doy_desc &lt;- points_in_buffer %&gt;%\n#   mutate(\n#     start_date = make_date(year) + days(doy - 1), \n#     end_date = make_date(year) + days(end - 1)\n#   ) %&gt;%\n#   rowwise() %&gt;%\n#   mutate(\n#     stats = list({\n#       current_index &lt;- cur_group_id()\n#       if (current_index %% 2000 == 0) {\n#         cat(\"Processing row:\", current_index, \"out of\", nrow(points_in_buffer), \"\\n\")\n#       }\n#       all_sites_temp %&gt;%\n#         filter(\n#           name == Site,\n#           Date &gt;= start_date & Date &lt;= end_date\n#         ) %&gt;%\n#         summarise(\n#           LowTemp_mean = mean(LowTemp, na.rm = TRUE),\n#           LowTemp_count = sum(!is.na(LowTemp)),\n#           AvgTemp_mean = mean(AvgTemp, na.rm = TRUE),\n#           AvgTemp_count = sum(!is.na(AvgTemp)),\n#           HighTemp_mean = mean(HighTemp, na.rm = TRUE),\n#           HighTemp_count = sum(!is.na(HighTemp)),\n#           Sum_mm_sum = sum(Sum_mm, na.rm = TRUE),\n#           Sum_mm_count = sum(!is.na(Sum_mm))\n#         )\n#     })\n#   ) %&gt;%\n#   unnest(stats)%&gt;%\n#   mutate(\n#     time_length = as.numeric(end_date - start_date, units = \"days\")\n#   )\n# saveRDS(growing_temp_doy_desc, \"~/phenology-urban/data/proc/nyc/growing_doy_desc.rds\")\n\ngrowing_temp_doy_desc &lt;- readRDS(\"~/phenology-urban/data/proc/nyc/growing_doy_desc.rds\")\nhead(growing_temp_doy_desc)\n\n\n# A tibble: 6 × 24\n    ...1     id taxa         site  genus  year start   end direction thres   doy\n   &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1 856615 187268 Carya glabra NY    Carya  2017    11   173 up          0      11\n2 856615 187268 Carya glabra NY    Carya  2017    11   173 up          0.1    35\n3 856615 187268 Carya glabra NY    Carya  2017    11   173 up          0.2    55\n4 856615 187268 Carya glabra NY    Carya  2017    11   173 up          0.3    75\n5 856615 187268 Carya glabra NY    Carya  2017    11   173 up          0.4    87\n6 856615 187268 Carya glabra NY    Carya  2017    11   173 up          0.5    96\n# ℹ 13 more variables: geometry &lt;chr&gt;, Site &lt;chr&gt;, start_date &lt;date&gt;,\n#   end_date &lt;date&gt;, LowTemp_mean &lt;dbl&gt;, LowTemp_count &lt;int&gt;,\n#   AvgTemp_mean &lt;dbl&gt;, AvgTemp_count &lt;int&gt;, HighTemp_mean &lt;dbl&gt;,\n#   HighTemp_count &lt;int&gt;, Sum_mm_sum &lt;dbl&gt;, Sum_mm_count &lt;int&gt;,\n#   time_length &lt;dbl&gt;\n\n\n\n3.2.1 The current event period\nI tried period_length (start of the event to the day when tree reaches the threshold) as well as day of year. However, one issue is that a later doy or a longer green-up period already corresponds to warmer weather in the current period.\n\nShould I also explore the optimal pre-season (e.g. for each genus) within the city?\n\n\nCode\ngrowing_temp_doy &lt;- readRDS(\"~/phenology-urban/data/proc/nyc/growing_doy.rds\") %&gt;%\n  filter(time_length != 0 & direction ==\"up\" & thres == 0.5 & genus == \"Acer\")\n\ncreate_scatter_plot(\n  data = growing_temp_doy, \n  x_var = \"AvgTemp_mean\", \n  y_var = \"doy\",\n  title = \"Relationship between period temperature and spring phenology\"\n)\ncreate_scatter_plot(\n  data = growing_temp_doy, \n  x_var = \"LowTemp_mean\", \n  y_var = \"doy\",\n  title = \"Relationship between period temperature and spring phenology\"\n)\ncreate_scatter_plot(\n  data = growing_temp_doy, \n  x_var = \"HighTemp_mean\", \n  y_var = \"doy\",\n  title = \"Relationship between period temperature and spring phenology\"\n)\n\n\n\ncreate_scatter_plot(\n  data = growing_temp_doy, \n  x_var = \"Sum_mm_sum\", \n  y_var = \"doy\",\n  title = \"Relationship between period precipitation and spring phenology\"\n)\n\ncreate_scatter_plot(\n  data = growing_temp_doy, \n  x_var = \"AvgTemp_mean\", \n  y_var = \"time_length\",\n  title = \"Relationship between period temperature and spring phenology\"\n)\n\ncreate_scatter_plot(\n  data = growing_temp_doy, \n  x_var = \"LowTemp_mean\", \n  y_var = \"time_length\",\n  title = \"Relationship between period temperature and spring phenology\"\n)\n\ncreate_scatter_plot(\n  data = growing_temp_doy, \n  x_var = \"HighTemp_mean\", \n  y_var = \"time_length\",\n  title = \"Relationship between period temperature and spring phenology\"\n)\n\ncreate_scatter_plot(\n  data = growing_temp_doy, \n  x_var = \"Sum_mm_sum\", \n  y_var = \"time_length\",\n  title = \"Relationship between period precipitation and spring phenology\"\n)\n\n\n\n\n\n\n\ndoy ~ average temp.\n\n\n\n\n\n\n\ndoy ~ low temp.\n\n\n\n\n\n\n\ndoy ~ high temp.\n\n\n\n\n\n\n\ndoy ~ prcp. sum\n\n\n\n\n\n\n\n\n\nperiod_length ~ average temp.\n\n\n\n\n\n\n\nperiod_length ~ low temp.\n\n\n\n\n\n\n\nperiod_length ~ high temp.\n\n\n\n\n\n\n\nperiod_length ~ prcp. sum\n\n\n\n\n\n\nRelationship between period climate and spring phenology\n\n\n\n\n\n3.2.2 The previous period\nThe climate condition in the previous period. Temp in dormancy -&gt; spring phenology. Temp in growing period -&gt; fall phenology. Compared to current period, the climate of the previous event is not structurally inherently linked to the timing of the subsequent event, and it can help connect to the underlying mechanisms.\n\n\nCode\ngrowing_temp_doy &lt;- readRDS(\"~/phenology-urban/data/proc/nyc/growing_doy.rds\") %&gt;%\n  filter(thres == 0.5) %&gt;%\n  select(id, genus, year, direction, doy, time_length)\ngrowing_temp_doy_desc &lt;- readRDS(\"~/phenology-urban/data/proc/nyc/growing_doy_desc.rds\") %&gt;%\n  filter(thres == 0.5) %&gt;%\n  select(id, genus, year, direction, LowTemp_mean, LowTemp_count, AvgTemp_mean, AvgTemp_count, HighTemp_mean, HighTemp_count, Sum_mm_sum, Sum_mm_count) %&gt;%\n  mutate(\n   join_year = case_when(\n     direction == \"up\" ~ year,\n     direction == \"down\" ~ year + 1\n   ),\n   join_direction = case_when(\n     direction == \"up\" ~ \"down\",\n     direction == \"down\" ~ \"up\"\n   ) \n  ) %&gt;%\n  select(-year, -direction)\n\ngrowing_doy_join &lt;- growing_temp_doy %&gt;%\n  left_join(growing_temp_doy_desc, by = c(\"id\" = \"id\", \"genus\" = \"genus\", \"year\" = \"join_year\", \"direction\" = \"join_direction\"))\n\n\nFor spring phenology, the warmer the dormancy period, the earlier the spring phenology. The warmer the dormancy period，the slower the green-up pace.\n\nCode\ngrowing_doy_spring &lt;- growing_doy_join %&gt;%\n  filter(direction == \"up\") %&gt;%\n  filter(genus == \"Acer\")\n\ncreate_scatter_plot(\n  data = growing_doy_spring, \n  x_var = \"AvgTemp_mean\", \n  y_var = \"doy\",\n  title = \"Relationship between growing temperature and spring phenology\"\n)\n\ncreate_scatter_plot(\n  data = growing_doy_spring, \n  x_var = \"HighTemp_mean\", \n  y_var = \"doy\",\n  title = \"Relationship between growing temperature and spring phenology\"\n)\n\n\ncreate_scatter_plot(\n  data = growing_doy_spring, \n  x_var = \"LowTemp_mean\", \n  y_var = \"doy\",\n  title = \"Relationship between growing temperature and spring phenology\"\n)\n\ncreate_scatter_plot(\n  data = growing_doy_spring, \n  x_var = \"Sum_mm_sum\", \n  y_var = \"doy\",\n  title = \"Relationship between growing precipitation and spring phenology\"\n)\n\ncreate_scatter_plot(\n  data = growing_doy_spring, \n  x_var = \"AvgTemp_mean\", \n  y_var = \"time_length\",\n  title = \"Relationship between growing temperature and spring phenology\"\n)\n\ncreate_scatter_plot(\n  data = growing_doy_spring, \n  x_var = \"HighTemp_mean\", \n  y_var = \"time_length\",\n  title = \"Relationship between growing temperature and spring phenology\"\n)\n\n\ncreate_scatter_plot(\n  data = growing_doy_spring, \n  x_var = \"LowTemp_mean\", \n  y_var = \"time_length\",\n  title = \"Relationship between growing temperature and spring phenology\"\n)\n\ncreate_scatter_plot(\n  data = growing_doy_spring, \n  x_var = \"Sum_mm_sum\", \n  y_var = \"time_length\",\n  title = \"Relationship between growing precipitation and spring phenology\"\n)\n\n\n\n\n\n\n\ndoy vs. average temp.\n\n\n\n\n\n\n\ndoy vs. high temp.\n\n\n\n\n\n\n\ndoy vs. low temp.\n\n\n\n\n\n\n\ndoy vs. prcp. sum\n\n\n\n\n\n\n\n\n\nperiod_length vs. average temp.\n\n\n\n\n\n\n\nperiod_length vs. high temp.\n\n\n\n\n\n\n\nperiod_length vs. low temp.\n\n\n\n\n\n\n\nperiod_length vs. prcp. sum\n\n\n\n\n\n\nRelationship between previous period climate and spring phenology\n\n\n\n\n\nCode\ngrowing_temp_doy &lt;- growing_doy_join %&gt;%\n  filter(direction == \"up\")\n\nmodel1 &lt;- lmer(doy ~ AvgTemp_mean  + Sum_mm_sum  +\n                (1 | genus), \n              data = growing_temp_doy)\n\nfixed_effects1 &lt;- tidy(model1, effects = \"fixed\")\n\nfixed_effects_table1 &lt;- fixed_effects1 %&gt;%\n  select(term, estimate, std.error, statistic) %&gt;%\n  mutate(\n    y_variable = \"doy\",\n    estimate = round(estimate, 3),\n    std.error = round(std.error, 3),\n    p.value = signif(2 * (1 - pnorm(abs(statistic))), 3)\n  )\n\nmodel2 &lt;- lmer(time_length ~ AvgTemp_mean  + Sum_mm_sum  +\n                (1 | genus), \n              data = growing_temp_doy)\n\nfixed_effects2 &lt;- tidy(model2, effects = \"fixed\")\n\nfixed_effects_table2 &lt;- fixed_effects2 %&gt;%\n  select(term, estimate, std.error, statistic) %&gt;%\n  mutate(\n    y_variable = \"time_length\",\n    estimate = round(estimate, 3),\n    std.error = round(std.error, 3),\n    p.value = signif(2 * (1 - pnorm(abs(statistic))), 3)\n  )\n\nfixed_effects_table &lt;- rbind(fixed_effects_table1, fixed_effects_table2) %&gt;%\n  select(y_variable, everything())\n\nkable(fixed_effects_table, format = \"markdown\", col.names = c(\"Dependent variable\", \"Term\", \"Estimate\", \"Std. Error\", \"t value\", \"P-Value\"))\n\n\n\nCoefficents for model (spring phenology ~ pervious period climate)\n\n\n\n\n\n\n\n\n\n\nDependent variable\nTerm\nEstimate\nStd. Error\nt value\nP-Value\n\n\n\n\ndoy\n(Intercept)\n121.770\n0.614\n198.443867\n0e+00\n\n\ndoy\nAvgTemp_mean\n-0.921\n0.051\n-17.893020\n0e+00\n\n\ndoy\nSum_mm_sum\n0.005\n0.001\n5.329484\n1e-07\n\n\ntime_length\n(Intercept)\n76.979\n0.872\n88.306877\n0e+00\n\n\ntime_length\nAvgTemp_mean\n3.542\n0.102\n34.663215\n0e+00\n\n\ntime_length\nSum_mm_sum\n-0.041\n0.002\n-22.918665\n0e+00\n\n\n\n\n\nFor fall phenology, the warmer the growing period, the later the fall phenology. The warmer the growing period，the faster the green-down pace.\n\nCode\ngrowing_doy_fall &lt;- growing_doy_join %&gt;%\n  filter(direction == \"down\") %&gt;%\n  filter(genus == \"Acer\")\n\ncreate_scatter_plot(\n  data = growing_doy_fall, \n  x_var = \"AvgTemp_mean\", \n  y_var = \"doy\",\n  title = \"Relationship between growing temperature and fall phenology\"\n)\n\ncreate_scatter_plot(\n  data = growing_doy_fall, \n  x_var = \"HighTemp_mean\", \n  y_var = \"doy\",\n  title = \"Relationship between growing temperature and fall phenology\"\n)\n\n\ncreate_scatter_plot(\n  data = growing_doy_fall, \n  x_var = \"LowTemp_mean\", \n  y_var = \"doy\",\n  title = \"Relationship between growing temperature and fall phenology\"\n)\n\ncreate_scatter_plot(\n  data = growing_doy_fall, \n  x_var = \"Sum_mm_sum\", \n  y_var = \"doy\",\n  title = \"Relationship between growing precipitation and fall phenology\"\n)\n\ncreate_scatter_plot(\n  data = growing_doy_fall, \n  x_var = \"AvgTemp_mean\", \n  y_var = \"time_length\",\n  title = \"Relationship between growing temperature and fall phenology\"\n)\n\ncreate_scatter_plot(\n  data = growing_doy_fall, \n  x_var = \"HighTemp_mean\", \n  y_var = \"time_length\",\n  title = \"Relationship between growing temperature and fall phenology\"\n)\n\n\ncreate_scatter_plot(\n  data = growing_doy_fall, \n  x_var = \"LowTemp_mean\", \n  y_var = \"time_length\",\n  title = \"Relationship between growing temperature and fall phenology\"\n)\n\ncreate_scatter_plot(\n  data = growing_doy_fall, \n  x_var = \"Sum_mm_sum\", \n  y_var = \"time_length\",\n  title = \"Relationship between growing precipitation and fall phenology\"\n)\n\n\n\n\n\n\n\ndoy vs. average temp.\n\n\n\n\n\n\n\ndoy vs. high temp.\n\n\n\n\n\n\n\ndoy vs. low temp.\n\n\n\n\n\n\n\ndoy vs. prcp. sum\n\n\n\n\n\n\n\n\n\nperiod_length vs. average temp.\n\n\n\n\n\n\n\nperiod_length vs. high temp.\n\n\n\n\n\n\n\nperiod_length vs. low temp.\n\n\n\n\n\n\n\nperiod_length vs. prcp. sum\n\n\n\n\n\n\nRelationship between previous period climate and spring phenology\n\n\n\n\n\nCode\ngrowing_temp_doy &lt;- growing_doy_join %&gt;%\n  filter(direction == \"down\")\n\nmodel1 &lt;- lmer(doy ~ AvgTemp_mean  + Sum_mm_sum  +\n                (1 | genus), \n              data = growing_temp_doy)\n\nfixed_effects1 &lt;- tidy(model1, effects = \"fixed\")\n\nfixed_effects_table1 &lt;- fixed_effects1 %&gt;%\n  select(term, estimate, std.error, statistic) %&gt;%\n  mutate(\n    y_variable = \"doy\",\n    estimate = round(estimate, 3),\n    std.error = round(std.error, 3),\n    p.value = signif(2 * (1 - pnorm(abs(statistic))), 3)\n  )\n\nmodel2 &lt;- lmer(time_length ~ AvgTemp_mean  + Sum_mm_sum  +\n                (1 | genus), \n              data = growing_temp_doy)\n\nfixed_effects2 &lt;- tidy(model2, effects = \"fixed\")\n\nfixed_effects_table2 &lt;- fixed_effects2 %&gt;%\n  select(term, estimate, std.error, statistic) %&gt;%\n  mutate(\n    y_variable = \"time_length\",\n    estimate = round(estimate, 3),\n    std.error = round(std.error, 3),\n    p.value = signif(2 * (1 - pnorm(abs(statistic))), 3)\n  )\n\nfixed_effects_table &lt;- rbind(fixed_effects_table1, fixed_effects_table2) %&gt;%\n  select(y_variable, everything())\n\nkable(fixed_effects_table, format = \"markdown\", col.names = c(\"Dependent variable\", \"Term\", \"Estimate\", \"Std. Error\", \"t value\", \"P-Value\"))\n\n\n\nCoefficents for model (fall phenology ~ pervious period climate)\n\n\n\n\n\n\n\n\n\n\nDependent variable\nTerm\nEstimate\nStd. Error\nt value\nP-Value\n\n\n\n\ndoy\n(Intercept)\n256.795\n2.461\n104.335144\n0\n\n\ndoy\nAvgTemp_mean\n1.751\n0.101\n17.263620\n0\n\n\ndoy\nSum_mm_sum\n0.014\n0.002\n7.322015\n0\n\n\ntime_length\n(Intercept)\n220.670\n2.596\n85.020263\n0\n\n\ntime_length\nAvgTemp_mean\n-4.939\n0.116\n-42.521789\n0\n\n\ntime_length\nSum_mm_sum\n-0.061\n0.002\n-27.798872\n0"
  },
  {
    "objectID": "workflow_micro_NYC.html#conclusion-and-next-step",
    "href": "workflow_micro_NYC.html#conclusion-and-next-step",
    "title": "workflow_micro_NYC",
    "section": "4 Conclusion and next step",
    "text": "4 Conclusion and next step\nWithin the city, the relationship between phenology and temperature is still significant.\n\nThe warmer the preseason temperature, the earlier the spring phenology, considering the spatial autocorrelation of phenology in the model\nThe precipitation has no significant impact.\n\nNext steps:\n\nKey highlights (coordinate them with Juwon):\n\nWithin-city variation, fall phenology, phenology pace, different taxa\n\nPreseason Optimization: At the year-, site-, and taxa-level. Individual-level pre-period might have some built-in relationship.\nPace: As for the algorithm, more uncertainty around 0% and 100%. Use thresholds within the period (e.g., 10–90% or 20–80%) to represent pace.\nSpatial regression: Try spBayes to address spatial autocorrelation.\nFuture steps:\n\nTest sensitivity by changing buffer size.\nAdd more taxa (data in DataDen and download latest PS images)"
  },
  {
    "objectID": "test.html",
    "href": "test.html",
    "title": "Hello, Quarto",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "test.html#meet-quarto",
    "href": "test.html#meet-quarto",
    "title": "Hello, Quarto",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "test.html#meet-the-penguins",
    "href": "test.html#meet-the-penguins",
    "title": "Hello, Quarto",
    "section": "Meet the penguins",
    "text": "Meet the penguins\n\nThe penguins data from the palmerpenguins package contains size measurements for 344 penguins from three species observed on three islands in the Palmer Archipelago, Antarctica.\nThe plot below shows the relationship between flipper and bill lengths of these penguins.\n\n\nCode\nggplot(penguins, \n       aes(x = flipper_length_mm, y = bill_length_mm)) +\n  geom_point(aes(color = species, shape = species)) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(\n    title = \"Flipper and bill length\",\n    subtitle = \"Dimensions for penguins at Palmer Station LTER\",\n    x = \"Flipper length (mm)\", y = \"Bill length (mm)\",\n    color = \"Penguin species\", shape = \"Penguin species\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nAnother code\n\n\nCode\nggplot(penguins, \n       aes(x = flipper_length_mm, y = bill_length_mm)) +\n  geom_point(aes(color = species, shape = species)) +\n  scale_color_manual(values = c(\"yellow3\",\"purple\",\"cyan4\")) +\n  labs(\n    title = \"Flipper and bill length\",\n    subtitle = \"Dimensions for penguins at Palmer Station LTER\",\n    x = \"Flipper length (mm)\", y = \"Bill length (mm)\",\n    color = \"Penguin species\", shape = \"Penguin species\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "workflow_micro_DT.html",
    "href": "workflow_micro_DT.html",
    "title": "workflow_micro_DT",
    "section": "",
    "text": "Code\n################ For phenology data ################\n\nmetadata &lt;- read_csv(\"~/lab-data/datasets/vegetation/PS/urban/metadata.csv\") %&gt;%\n  filter(site == \"DT\")\n\nfile_list &lt;- list.files(path = \"~/lab-data/datasets/vegetation/PS/urban/doy/\", pattern = \"^doy_DT_.*\\\\.rds$\", full.names = TRUE)\ndata_list &lt;- file_list %&gt;%\n  map(~ readRDS(.x))\nDT_now &lt;- bind_rows(data_list)\n\ntree_location &lt;- metadata %&gt;%\n  mutate(genus = str_extract(taxa, \"^[^ ]+\")) %&gt;%\n  left_join(DT_now, by = \"id\") %&gt;%\n  filter(!is.na(doy)) %&gt;%\n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326)\n\nwu_location &lt;- read_csv(\"~/urban-cooling/data/raw/WU/DT/location.csv\") %&gt;%\n  st_as_sf(coords = c(\"Lon\", \"Lat\"), crs = 4326)\nwu_buffer &lt;- st_buffer(wu_location, dist = 500)\n\nintersects &lt;- st_intersects(tree_location, wu_buffer)\npoints_in_buffer &lt;- tree_location[lengths(intersects) &gt; 0, ]\npoints_in_buffer &lt;- tree_location %&gt;%\n  mutate(buffer_id = sapply(intersects, function(x) if (length(x) &gt; 0) x[1] else NA)) %&gt;% \n  left_join(wu_buffer %&gt;% st_drop_geometry() %&gt;% mutate(buffer_id = row_number()), by = \"buffer_id\") %&gt;%\n  filter(!is.na(buffer_id)) %&gt;%\n  select(-buffer_id)\n\n\n\n\nCode\n# nyboundary &lt;- st_read(\"~/urban-cooling/data/raw/NYC/boundary/nybb_dissolved.shp\") %&gt;%\n#   st_transform(4326)\n# \nggplot() +\n  # geom_sf(data = nyboundary, fill = \"grey\") +\n  geom_sf(data = wu_location, color = \"blue\", size = 1) +\n  geom_sf(data = points_in_buffer, color = \"red\", size = 0.05) +\n  theme_minimal()\n\n\n\n\n\nLocation of WU sites and trees\n\n\n\n\nCode\n# write_csv(points_in_buffer,\"~/phenology-urban/data/proc/DT/tree_WU_500_buffer_PS.csv\")\npoints_in_buffer &lt;- read_csv(\"~/phenology-urban/data/proc/DT/tree_WU_500_buffer_PS.csv\")"
  },
  {
    "objectID": "workflow_micro_DT.html#insert-tree-id-base-on-wu-data",
    "href": "workflow_micro_DT.html#insert-tree-id-base-on-wu-data",
    "title": "workflow_micro_DT",
    "section": "",
    "text": "Code\n################ For phenology data ################\n\nmetadata &lt;- read_csv(\"~/lab-data/datasets/vegetation/PS/urban/metadata.csv\") %&gt;%\n  filter(site == \"DT\")\n\nfile_list &lt;- list.files(path = \"~/lab-data/datasets/vegetation/PS/urban/doy/\", pattern = \"^doy_DT_.*\\\\.rds$\", full.names = TRUE)\ndata_list &lt;- file_list %&gt;%\n  map(~ readRDS(.x))\nDT_now &lt;- bind_rows(data_list)\n\ntree_location &lt;- metadata %&gt;%\n  mutate(genus = str_extract(taxa, \"^[^ ]+\")) %&gt;%\n  left_join(DT_now, by = \"id\") %&gt;%\n  filter(!is.na(doy)) %&gt;%\n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326)\n\nwu_location &lt;- read_csv(\"~/urban-cooling/data/raw/WU/DT/location.csv\") %&gt;%\n  st_as_sf(coords = c(\"Lon\", \"Lat\"), crs = 4326)\nwu_buffer &lt;- st_buffer(wu_location, dist = 500)\n\nintersects &lt;- st_intersects(tree_location, wu_buffer)\npoints_in_buffer &lt;- tree_location[lengths(intersects) &gt; 0, ]\npoints_in_buffer &lt;- tree_location %&gt;%\n  mutate(buffer_id = sapply(intersects, function(x) if (length(x) &gt; 0) x[1] else NA)) %&gt;% \n  left_join(wu_buffer %&gt;% st_drop_geometry() %&gt;% mutate(buffer_id = row_number()), by = \"buffer_id\") %&gt;%\n  filter(!is.na(buffer_id)) %&gt;%\n  select(-buffer_id)\n\n\n\n\nCode\n# nyboundary &lt;- st_read(\"~/urban-cooling/data/raw/NYC/boundary/nybb_dissolved.shp\") %&gt;%\n#   st_transform(4326)\n# \nggplot() +\n  # geom_sf(data = nyboundary, fill = \"grey\") +\n  geom_sf(data = wu_location, color = \"blue\", size = 1) +\n  geom_sf(data = points_in_buffer, color = \"red\", size = 0.05) +\n  theme_minimal()\n\n\n\n\n\nLocation of WU sites and trees\n\n\n\n\nCode\n# write_csv(points_in_buffer,\"~/phenology-urban/data/proc/DT/tree_WU_500_buffer_PS.csv\")\npoints_in_buffer &lt;- read_csv(\"~/phenology-urban/data/proc/DT/tree_WU_500_buffer_PS.csv\")"
  },
  {
    "objectID": "workflow_micro_DT.html#creat-the-climate-variable",
    "href": "workflow_micro_DT.html#creat-the-climate-variable",
    "title": "workflow_micro_DT",
    "section": "2. Creat the climate variable",
    "text": "2. Creat the climate variable\n\n2.1 Read and clean the WU data (based on GHCNd)\n\n\nCode\nsource(\"~/phenology-urban/script/read_clean_WU.R\")\n# all_sites_temp &lt;- read_clean_WU(city = \"DT\", run_checks = TRUE)\n# saveRDS(all_sites_temp, \"~/urban-cooling/data/raw/WU/DT/DT_wu.rds\")\nall_sites_temp &lt;- readRDS(\"~/urban-cooling/data/raw/WU/DT/DT_wu.rds\") %&gt;%\n  select(c(Date, HighTemp, AvgTemp, LowTemp, Sum_mm, name))\n\n\n\n\n2.2 Create seasonal temp/prcp variables"
  },
  {
    "objectID": "workflow_micro_DT.html#explore-the-relationship-between-temperature-and-phenology",
    "href": "workflow_micro_DT.html#explore-the-relationship-between-temperature-and-phenology",
    "title": "workflow_micro_DT",
    "section": "3 Explore the relationship between temperature and phenology",
    "text": "3 Explore the relationship between temperature and phenology\n\n3.1 Seasonal climate variables\nOverall, the warmer the summer temperature, the later the fall phenology. Other relationship are not significant.\nIn the mixed effect model, I treated the genus as a random effect.\nFor spring phenology\n\n\nCode\nseasonal_temp_doy &lt;- readRDS(\"~/phenology-urban/data/proc/DT/seasonal_doy.rds\") %&gt;%\n  mutate(time_length = doy - start) %&gt;%\n  filter(direction ==\"up\" & thres == 0.5)\n\nmodel &lt;- lmer(doy ~ Avg_AvgTemp_winter  + Sum_Sum_mm_winter  +\n                (1 | genus), \n              data = seasonal_temp_doy)\n\nfixed_effects &lt;- tidy(model, effects = \"fixed\")\n\nfixed_effects_table &lt;- fixed_effects %&gt;%\n  select(term, estimate, std.error, statistic) %&gt;%\n  mutate(\n    estimate = round(estimate, 3),\n    std.error = round(std.error, 3),\n    p.value = signif(2 * (1 - pnorm(abs(statistic))), 3)\n  )\n\nkable(fixed_effects_table, format = \"markdown\", col.names = c(\"Term\", \"Estimate\", \"Std. Error\", \"t value\", \"P-Value\"))\n\n\n\nCoefficents for model (spring phenology ~ winter climate)\n\n\nTerm\nEstimate\nStd. Error\nt value\nP-Value\n\n\n\n\n(Intercept)\n121.641\n1.250\n97.274997\n0.000\n\n\nAvg_AvgTemp_winter\n-1.821\n0.202\n-9.024978\n0.000\n\n\nSum_Sum_mm_winter\n0.005\n0.004\n1.232385\n0.218\n\n\n\n\n\n\n\nCode\nseasonal_temp_doy &lt;- readRDS(\"~/phenology-urban/data/proc/DT/seasonal_doy.rds\") %&gt;%\n  mutate(time_length = doy - start) %&gt;%\n  filter(direction ==\"down\" & thres == 0.5)\n\nmodel &lt;- lmer(doy ~ Avg_AvgTemp_summer  + Sum_Sum_mm_summer  +\n                (1 | genus), \n              data = seasonal_temp_doy)\n\nfixed_effects &lt;- tidy(model, effects = \"fixed\")\n\nfixed_effects_table &lt;- fixed_effects %&gt;%\n  select(term, estimate, std.error, statistic) %&gt;%\n  mutate(\n    estimate = round(estimate, 3),\n    std.error = round(std.error, 3),\n    p.value = signif(2 * (1 - pnorm(abs(statistic))), 3)\n  )\n\nkable(fixed_effects_table, format = \"markdown\", col.names = c(\"Term\", \"Estimate\", \"Std. Error\", \"t value\", \"P-Value\"))\n\n\n\nCoefficents for model (fall phenology ~ summer climate)\n\n\nTerm\nEstimate\nStd. Error\nt value\nP-Value\n\n\n\n\n(Intercept)\n198.036\n6.579\n30.1030020\n0.000\n\n\nAvg_AvgTemp_summer\n4.237\n0.280\n15.1484264\n0.000\n\n\nSum_Sum_mm_summer\n0.000\n0.002\n0.1092368\n0.913\n\n\n\n\n\n\n\n3.2 Event period climate\n\n\n3.2.1 Create period temp/prcp variables\n\n\n\n\n\n\n\nCode\n# growing_temp_doy &lt;- points_in_buffer %&gt;%\n#   mutate(\n#     start_date = make_date(year) + days(start - 1),\n#     end_date = make_date(year) + days(doy - 1)\n#   ) %&gt;%\n#   rowwise() %&gt;%\n#   mutate(\n#     stats = list({\n#       current_index &lt;- cur_group_id()\n#       if (current_index %% 2000 == 0) {\n#         cat(\"Processing row:\", current_index, \"out of\", nrow(points_in_buffer), \"\\n\")\n#       }\n#       all_sites_temp %&gt;%\n#         filter(\n#           name == Site,\n#           Date &gt;= start_date & Date &lt;= end_date\n#         ) %&gt;%\n#         summarise(\n#           LowTemp_mean = mean(LowTemp, na.rm = TRUE),\n#           LowTemp_count = sum(!is.na(LowTemp)),\n#           AvgTemp_mean = mean(AvgTemp, na.rm = TRUE),\n#           AvgTemp_count = sum(!is.na(AvgTemp)),\n#           HighTemp_mean = mean(HighTemp, na.rm = TRUE),\n#           HighTemp_count = sum(!is.na(HighTemp)),\n#           Sum_mm_sum = sum(Sum_mm, na.rm = TRUE),\n#           Sum_mm_count = sum(!is.na(Sum_mm))\n#         )\n#     })\n#   ) %&gt;%\n#   unnest(stats)%&gt;%\n#   mutate(\n#     time_length = as.numeric(end_date - start_date, units = \"days\")\n#   )\n\n# saveRDS(growing_temp_doy, \"~/phenology-urban/data/proc/DT/growing_doy.rds\")\n\ngrowing_temp_doy &lt;- readRDS(\"~/phenology-urban/data/proc/DT/growing_doy.rds\")\nhead(growing_temp_doy)\n\n\n# A tibble: 6 × 24\n    ...1     id taxa         site  genus  year start   end direction thres   doy\n   &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1 292612 242783 Betula popu… DT    Betu…  2017    67   199 up          0      67\n2 292612 242783 Betula popu… DT    Betu…  2017    67   199 up          0.1    98\n3 292612 242783 Betula popu… DT    Betu…  2017    67   199 up          0.2   108\n4 292612 242783 Betula popu… DT    Betu…  2017    67   199 up          0.3   115\n5 292612 242783 Betula popu… DT    Betu…  2017    67   199 up          0.4   122\n6 292612 242783 Betula popu… DT    Betu…  2017    67   199 up          0.5   128\n# ℹ 13 more variables: geometry &lt;chr&gt;, Site &lt;chr&gt;, start_date &lt;date&gt;,\n#   end_date &lt;date&gt;, LowTemp_mean &lt;dbl&gt;, LowTemp_count &lt;int&gt;,\n#   AvgTemp_mean &lt;dbl&gt;, AvgTemp_count &lt;int&gt;, HighTemp_mean &lt;dbl&gt;,\n#   HighTemp_count &lt;int&gt;, Sum_mm_sum &lt;dbl&gt;, Sum_mm_count &lt;int&gt;,\n#   time_length &lt;dbl&gt;\n\n\n\n3.2.1 The current event period\n\n\n\n\nCode\ngrowing_temp_doy &lt;- readRDS(\"~/phenology-urban/data/proc/DT/growing_doy.rds\") %&gt;%\n  filter(time_length != 0 & direction ==\"up\" & thres == 0.5)\n\nmodel1 &lt;- lmer(doy ~ AvgTemp_mean  + Sum_mm_sum  +\n                (1 | genus), \n              data = growing_temp_doy)\n\nfixed_effects1 &lt;- tidy(model1, effects = \"fixed\")\n\nfixed_effects_table1 &lt;- fixed_effects1 %&gt;%\n  select(term, estimate, std.error, statistic) %&gt;%\n  mutate(\n    y_variable = \"doy\",\n    estimate = round(estimate, 3),\n    std.error = round(std.error, 3),\n    p.value = signif(2 * (1 - pnorm(abs(statistic))), 3)\n  )\n\nmodel2 &lt;- lmer(time_length ~ AvgTemp_mean  + Sum_mm_sum  +\n                (1 | genus), \n              data = growing_temp_doy)\n\nfixed_effects2 &lt;- tidy(model2, effects = \"fixed\")\n\nfixed_effects_table2 &lt;- fixed_effects2 %&gt;%\n  select(term, estimate, std.error, statistic) %&gt;%\n  mutate(\n    y_variable = \"time_length\",\n    estimate = round(estimate, 3),\n    std.error = round(std.error, 3),\n    p.value = signif(2 * (1 - pnorm(abs(statistic))), 3)\n  )\n\nfixed_effects_table &lt;- rbind(fixed_effects_table1, fixed_effects_table2) %&gt;%\n  select(y_variable, everything())\n\nkable(fixed_effects_table, format = \"markdown\", col.names = c(\"Dependent variable\", \"Term\", \"Estimate\", \"Std. Error\", \"t value\", \"P-Value\"))\n\n\n\nCoefficents for model (spring phenology ~ current period climate)\n\n\n\n\n\n\n\n\n\n\nDependent variable\nTerm\nEstimate\nStd. Error\nt value\nP-Value\n\n\n\n\ndoy\n(Intercept)\n117.208\n1.173\n99.906130\n0.000\n\n\ndoy\nAvgTemp_mean\n1.098\n0.111\n9.891255\n0.000\n\n\ndoy\nSum_mm_sum\n0.003\n0.002\n1.353886\n0.176\n\n\ntime_length\n(Intercept)\n104.872\n1.771\n59.230125\n0.000\n\n\ntime_length\nAvgTemp_mean\n-6.092\n0.193\n-31.636560\n0.000\n\n\ntime_length\nSum_mm_sum\n0.034\n0.004\n9.420579\n0.000\n\n\n\n\n\n\n\n3.2.2 The previous period\n\nFor spring phenology, the warmer the dormancy period, the earlier the spring phenology. The warmer the dormancy period，the slower the green-up pace.\n\n\nCode\ngrowing_temp_doy &lt;- growing_doy_join %&gt;%\n  filter(direction == \"up\")\n\nmodel1 &lt;- lmer(doy ~ AvgTemp_mean  + Sum_mm_sum  +\n                (1 | genus), \n              data = growing_temp_doy)\n\nfixed_effects1 &lt;- tidy(model1, effects = \"fixed\")\n\nfixed_effects_table1 &lt;- fixed_effects1 %&gt;%\n  select(term, estimate, std.error, statistic) %&gt;%\n  mutate(\n    y_variable = \"doy\",\n    estimate = round(estimate, 3),\n    std.error = round(std.error, 3),\n    p.value = signif(2 * (1 - pnorm(abs(statistic))), 3)\n  )\n\nmodel2 &lt;- lmer(time_length ~ AvgTemp_mean  + Sum_mm_sum  +\n                (1 | genus), \n              data = growing_temp_doy)\n\nfixed_effects2 &lt;- tidy(model2, effects = \"fixed\")\n\nfixed_effects_table2 &lt;- fixed_effects2 %&gt;%\n  select(term, estimate, std.error, statistic) %&gt;%\n  mutate(\n    y_variable = \"time_length\",\n    estimate = round(estimate, 3),\n    std.error = round(std.error, 3),\n    p.value = signif(2 * (1 - pnorm(abs(statistic))), 3)\n  )\n\nfixed_effects_table &lt;- rbind(fixed_effects_table1, fixed_effects_table2) %&gt;%\n  select(y_variable, everything())\n\nkable(fixed_effects_table, format = \"markdown\", col.names = c(\"Dependent variable\", \"Term\", \"Estimate\", \"Std. Error\", \"t value\", \"P-Value\"))\n\n\n\nCoefficents for model (spring phenology ~ pervious period climate)\n\n\n\n\n\n\n\n\n\n\nDependent variable\nTerm\nEstimate\nStd. Error\nt value\nP-Value\n\n\n\n\ndoy\n(Intercept)\n122.700\n1.108\n110.7095997\n0.000000\n\n\ndoy\nAvgTemp_mean\n-0.231\n0.068\n-3.3812453\n0.000722\n\n\ndoy\nSum_mm_sum\n0.007\n0.002\n3.4260978\n0.000612\n\n\ntime_length\n(Intercept)\n78.762\n1.392\n56.5763854\n0.000000\n\n\ntime_length\nAvgTemp_mean\n0.546\n0.163\n3.3449871\n0.000823\n\n\ntime_length\nSum_mm_sum\n-0.002\n0.005\n-0.4416791\n0.659000\n\n\n\n\n\nFor fall phenology, the warmer the growing period, the later the fall phenology. The warmer the growing period，the faster the green-down pace.\n\n\nCode\ngrowing_temp_doy &lt;- growing_doy_join %&gt;%\n  filter(direction == \"down\")\n\nmodel1 &lt;- lmer(doy ~ AvgTemp_mean  + Sum_mm_sum  +\n                (1 | genus), \n              data = growing_temp_doy)\n\nfixed_effects1 &lt;- tidy(model1, effects = \"fixed\")\n\nfixed_effects_table1 &lt;- fixed_effects1 %&gt;%\n  select(term, estimate, std.error, statistic) %&gt;%\n  mutate(\n    y_variable = \"doy\",\n    estimate = round(estimate, 3),\n    std.error = round(std.error, 3),\n    p.value = signif(2 * (1 - pnorm(abs(statistic))), 3)\n  )\n\nmodel2 &lt;- lmer(time_length ~ AvgTemp_mean  + Sum_mm_sum  +\n                (1 | genus), \n              data = growing_temp_doy)\n\nfixed_effects2 &lt;- tidy(model2, effects = \"fixed\")\n\nfixed_effects_table2 &lt;- fixed_effects2 %&gt;%\n  select(term, estimate, std.error, statistic) %&gt;%\n  mutate(\n    y_variable = \"time_length\",\n    estimate = round(estimate, 3),\n    std.error = round(std.error, 3),\n    p.value = signif(2 * (1 - pnorm(abs(statistic))), 3)\n  )\n\nfixed_effects_table &lt;- rbind(fixed_effects_table1, fixed_effects_table2) %&gt;%\n  select(y_variable, everything())\n\nkable(fixed_effects_table, format = \"markdown\", col.names = c(\"Dependent variable\", \"Term\", \"Estimate\", \"Std. Error\", \"t value\", \"P-Value\"))\n\n\n\nCoefficents for model (fall phenology ~ pervious period climate)\n\n\n\n\n\n\n\n\n\n\nDependent variable\nTerm\nEstimate\nStd. Error\nt value\nP-Value\n\n\n\n\ndoy\n(Intercept)\n250.916\n3.115\n80.560054\n0.00e+00\n\n\ndoy\nAvgTemp_mean\n2.085\n0.144\n14.483046\n0.00e+00\n\n\ndoy\nSum_mm_sum\n0.006\n0.002\n2.867466\n4.14e-03\n\n\ntime_length\n(Intercept)\n133.898\n5.265\n25.433816\n0.00e+00\n\n\ntime_length\nAvgTemp_mean\n-1.120\n0.250\n-4.483999\n7.30e-06\n\n\ntime_length\nSum_mm_sum\n-0.054\n0.004\n-15.352205\n0.00e+00"
  },
  {
    "objectID": "workflow_micro_DT.html#conclusion-and-next-step",
    "href": "workflow_micro_DT.html#conclusion-and-next-step",
    "title": "workflow_micro_DT",
    "section": "4 Conclusion and next step",
    "text": "4 Conclusion and next step\nWithin the city, the relationship between phenology and temperature is still significant.\n\nThe warmer the preseason temperature, the earlier the spring phenology.\nThe warmer the preseason temperature, the later the fall phenology.\nThe warmer the dormancy period，the slower the green-up pace. The warmer the growing period，the faster the green-down pace. (consistent results in lmer model)\nThe precipitation has no significant impact.\n\nNext steps:\n\nFind the optimal preseason? Related to process-based model\nEnlarge the samples in NYC.\nAdd the urban structure variables.\nEnlarge the city samples (downloading WU in other 6 cities).\n\nJuwon conducted research on the impact of climate change on urban trees, focusing specifically on changes in the start of the growing season in New York. He and Prof. Seto plan to expand this approach across the U.S., and he looks forward to potential collaborations."
  },
  {
    "objectID": "workflow_micro_NYC.html#raw-data",
    "href": "workflow_micro_NYC.html#raw-data",
    "title": "workflow_micro_NYC",
    "section": "",
    "text": "For exploratory analysis, I used the street tree in NYC, with the phenology information established by Yiluan. These trees are part of the whole inventory, covering only 14 genera and being sampled. I select the trees which are within 500-m buffer around the weather underground sites (see Figure 1).\n\n\nCode\npoints_in_buffer_sf &lt;- points_in_buffer %&gt;%\n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326)\nboundary &lt;- st_read(\"~/urban-cooling/data/raw/WU/NY/Untitled/nybb_dissolved.shp\") %&gt;%\n  st_transform(4326)\n\n\nReading layer `nybb_dissolved' from data source \n  `/Volumes/seas-zhukai/proj-urban-cooling/data/raw/WU/NY/Untitled/nybb_dissolved.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 1 field\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 913175.1 ymin: 120128.4 xmax: 1067383 ymax: 272844.3\nProjected CRS: NAD83 / New York Long Island (ftUS)\n\n\nCode\nggplot() +\n  geom_sf(data = boundary, fill = \"grey\") +\n  geom_sf(data = wu_location, color = \"blue\", size = 1) +\n  geom_sf(data = points_in_buffer_sf, color = \"red\", size = 0.05) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nFigure 1: Location of WU sites and trees\n\n\n\n\n\n\n\n\nThere are 4 raw daily variables selected, i.e. AvgTemp, HighTemp, LowTemp and Precipitation_sum (Sum_mm). I flagged the records which are unknown or questionable according to the methods applied by Global Historical Climatology Network daily GHCNd.\n\n\nCode\n# all_sites_temp &lt;- read_clean_WU(city = \"ST\", run_checks = TRUE)\nall_sites_temp &lt;- readRDS(\"~/urban-cooling/data/raw/WU/NY/NY_wu.rds\") %&gt;%\n  dplyr::select(c(Date, HighTemp, AvgTemp, LowTemp, Sum_mm, name))\n\n\n\n\n\n\n\nCode\n# download\nsrad_daily &lt;- readRDS(\"~/phenology-urban/data/raw/NY/Daymet/daily2016-2024/srad_daily_2016-2023.rds\")"
  },
  {
    "objectID": "workflow_micro_NYC.html#find-the-optimal-preseason",
    "href": "workflow_micro_NYC.html#find-the-optimal-preseason",
    "title": "workflow_micro_NYC",
    "section": "2 Find the optimal preseason",
    "text": "2 Find the optimal preseason\nThe seasonal climate variables use a fixed pre-season for every trees, not allowing heterogeneity within city. Also, the roughly divided season make it difficult to connect to phenology process, e.g. chilling and forcing accumulation. Therefore, some studies use varing preseason or optimal preseason.\nMeng et al., 2020, Wang et al., 2021: The preseason was defined as the period from November 1st in the previous year to the time of SOS in the current year. (most fixed)\nMeng et al., 2020, Yin et al., 2024: For each city, the period for which the absolute value of the partial correlation coefficient between SOS and Temp was highest was considered the optimal length of the preseason most relevant to SOS. (more flexible, cadidate time: 0 to 6 months prior to SOS, 5-day interval approach from January 1st to the average SOS date)\nHere, based on the variable (phenology metric: SOS, EOS, green-up pace, green-down pace, temp. metric: t_avg, t_min, t_max), I find the optimal preseason at genus-city level (ignore the year for now due to sample size). The period for which the absolute value of the partial correlation coefficient between phenology and temp. metric is highest is considered the optimal length of the preseason most relevant to the certain phenology metric.\n\n\nCode\ncalculate_partial_correlation &lt;- function(insert_data, direction, thres, genus, pre_lengths, \n                                          phe_variable, temp_variable) {\n  subset_tree_pcor &lt;- insert_data %&gt;%\n    filter(direction == !!direction & thres == !!thres & genus == !!genus)\n  results &lt;- lapply(pre_lengths, function(pre_length) {\n    cat(\"Preseason length (days):\", pre_length, \"\\n\")\n    preseason_var &lt;- subset_tree_pcor %&gt;%\n      mutate(\n        start_date = make_date(year) + days(round(mean(doy)) - 1) - days(pre_length),\n        end_date = make_date(year) + days(round(mean(doy)) - 1)\n      )\n\n    temp_stats &lt;- all_sites_temp %&gt;%\n      filter(name %in% preseason_var$Site) %&gt;%\n      inner_join(preseason_var, by = c(\"name\" = \"Site\")) %&gt;%\n      filter(Date &gt;= start_date & Date &lt;= end_date) %&gt;%\n      group_by(id,year) %&gt;%\n      summarise(\n        LowTemp_mean = mean(LowTemp, na.rm = TRUE),\n        LowTemp_count = sum(!is.na(LowTemp)),\n        AvgTemp_mean = mean(AvgTemp, na.rm = TRUE),\n        AvgTemp_count = sum(!is.na(AvgTemp)),\n        HighTemp_mean = mean(HighTemp, na.rm = TRUE),\n        HighTemp_count = sum(!is.na(HighTemp)),\n        Sum_mm_sum = sum(Sum_mm, na.rm = TRUE),\n        Sum_mm_count = sum(!is.na(Sum_mm)),\n        .groups = \"drop\"\n      )\n  \n    srad_stats &lt;- srad_daily %&gt;%\n      filter(id %in% preseason_var$id) %&gt;%\n      inner_join(preseason_var, by = \"id\") %&gt;%\n      filter(date &gt;= start_date & date &lt;= end_date) %&gt;%\n      group_by(id,year) %&gt;%\n      summarise(\n        srad_mean = mean(value, na.rm = TRUE),\n        srad_count = sum(!is.na(value)),\n        .groups = \"drop\"\n      )\n    \n    preseason_var &lt;- preseason_var %&gt;%\n      left_join(temp_stats, by = c(\"id\",\"year\")) %&gt;%\n      left_join(srad_stats, by = c(\"id\",\"year\"))\n    \n    \n    if (temp_variable %in% c(\"LowTemp_mean\", \"HighTemp_mean\")){\n      selected_data &lt;- preseason_var %&gt;%\n      dplyr::select(\n        {{ phe_variable }}, LowTemp_mean, HighTemp_mean, Sum_mm_sum,  srad_mean\n      ) %&gt;%\n      na.omit()\n    } else {\n      selected_data &lt;- preseason_var %&gt;%\n      dplyr::select(\n        {{ phe_variable }}, AvgTemp_mean,Sum_mm_sum, srad_mean\n      ) %&gt;%\n      na.omit()\n    }\n    partial_corr &lt;- pcor(selected_data)\n    \n    correlation &lt;- partial_corr$estimate[\n        rownames(partial_corr$estimate) == phe_variable, \n        colnames(partial_corr$estimate) == temp_variable\n      ]\n    pvalue &lt;- partial_corr$p.value[\n        rownames(partial_corr$p.value) == phe_variable, \n        colnames(partial_corr$p.value) == temp_variable\n      ]\n  list(correlation = correlation, pvalue = pvalue, preseason_var = preseason_var)\n  })\n  \n  correlations &lt;- sapply(results, function(x) (x$correlation))\n  pvalues &lt;- sapply(results, function(x) (x$pvalue))\n  \n  \n  max_idx &lt;- which.max(abs(correlations))\n  \n  return(list(\n    optimal_pre_length = pre_lengths[max_idx],\n    pre_length_candidate  = pre_lengths,\n    pre_length_trend = correlations,\n    pvalue_trend = pvalues,\n    partial_correlation = results[[max_idx]]$correlation,\n    partial_corr_pvalue = results[[max_idx]]$pvalue,\n    preseason_var = results[[max_idx]]$preseason_var\n  ))\n}\n\n\npre_lengths &lt;- seq(5, 180, by = 5)\nall_genus &lt;- unique(points_in_buffer$genus)\ntemp_variable = \"AvgTemp_mean\"\n\n\n\n2.1 Spring phenology\n\nSOS date\nDefined as the day of year when individual tree growing season EVI curves first cross the green-up 50% threshold.\n\n\nCode\ndirection &lt;- \"up\"\nthres &lt;- 0.5\nphe_variable = \"doy\"\ninsert_data = points_in_buffer\n\nall_results &lt;- list()\nall_results &lt;- lapply(all_genus, function(genus) {\n  cat(\"Processing genus:\", genus, \"\\n\")\n  result &lt;- calculate_partial_correlation(\n    insert_data = insert_data,\n    direction = direction,\n    thres = thres,\n    genus = genus,\n    pre_lengths = pre_lengths,\n    phe_variable = phe_variable,\n    temp_variable = temp_variable\n  )\n  return(result)\n})\n\nspring_date_preseason_var &lt;- do.call(rbind, lapply(all_results, function(x) x$preseason_var))\nspring_date_combined_results &lt;- lapply(all_results, function(x) {\n  list(\n    genus = unique(x$preseason_var$genus),\n    optimal_pre_length = x$optimal_pre_length,\n    partial_correlation = x$partial_correlation,\n    partial_corr_pvalue = x$partial_corr_pvalue,\n    pre_length_candidate = x$pre_length_candidate,\n    pre_length_trend = x$pre_length_trend,\n    pvalue_trend = x$pvalue_trend\n  )\n})\nspring_date_combined_results &lt;- do.call(rbind, lapply(spring_date_combined_results, as.data.frame))\n\n\n\n\nGreen-up Pace\nDefined as the time span (in days) required for the individual tree growing season EVI curves to transition from the green-up 20% threshold to the 80% threshold.\n\n\nCode\ndiff &lt;- points_in_buffer %&gt;%\n  group_by(year, id, direction) %&gt;%\n  filter(thres %in% c(0.2, 0.8)) %&gt;% \n  summarise(\n    doy_diff = abs(diff(doy[order(thres)])),\n    .groups = \"drop\"\n  )\n\npoints_with_diff &lt;- points_in_buffer %&gt;%\n  left_join(diff, by = c(\"year\", \"id\", \"direction\"))\n\ndirection &lt;- \"up\"\nthres &lt;- 0.2              # change to 0.5?\nphe_variable = \"doy_diff\"\ninsert_data = points_with_diff\n\nall_results &lt;- list()\nall_results &lt;- lapply(all_genus, function(genus) {\n  cat(\"Processing genus:\", genus, \"\\n\")\n  result &lt;- calculate_partial_correlation(\n    insert_data = insert_data,\n    direction = direction,\n    thres = thres,\n    genus = genus,\n    pre_lengths = pre_lengths,\n    phe_variable = phe_variable,\n    temp_variable = temp_variable\n  )\n  return(result)\n})\n\nspring_pace_preseason_var &lt;- do.call(rbind, lapply(all_results, function(x) x$preseason_var))\nspring_pace_combined_results &lt;- lapply(all_results, function(x) {\n  list(\n    genus = unique(x$preseason_var$genus),\n    optimal_pre_length = x$optimal_pre_length,\n    partial_correlation = x$partial_correlation,\n    partial_corr_pvalue = x$partial_corr_pvalue,\n    pre_length_candidate = x$pre_length_candidate,\n    pre_length_trend = x$pre_length_trend,\n    pvalue_trend = x$pvalue_trend\n  )\n})\nspring_pace_combined_results &lt;- do.call(rbind, lapply(spring_pace_combined_results, as.data.frame))\n\n\n\n\n\n2.2 Fall phenology\n\nEOS date\nDefined as the day of year when individual tree growing season EVI curves first cross the green-down 50% threshold.\n\nCode\ndirection &lt;- \"down\"\nthres &lt;- 0.5\nphe_variable = \"doy\"\ninsert_data = points_in_buffer\n\nall_results &lt;- list()\nall_results &lt;- lapply(all_genus, function(genus) {\n  cat(\"Processing genus:\", genus, \"\\n\")\n \n  result &lt;- calculate_partial_correlation(\n    insert_data = insert_data,\n    direction = direction,\n    thres = thres,\n    genus = genus,\n    pre_lengths = pre_lengths,\n    phe_variable = phe_variable,\n    temp_variable = temp_variable\n  )\n  return(result)\n})\n\nfall_date_preseason_var &lt;- do.call(rbind, lapply(all_results, function(x) x$preseason_var))\nfall_date_combined_results &lt;- lapply(all_results, function(x) {\n  list(\n    genus = unique(x$preseason_var$genus),\n    optimal_pre_length = x$optimal_pre_length,\n    partial_correlation = x$partial_correlation,\n    partial_corr_pvalue = x$partial_corr_pvalue,\n    pre_length_candidate = x$pre_length_candidate,\n    pre_length_trend = x$pre_length_trend,\n    pvalue_trend = x$pvalue_trend\n  )\n})\nfall_date_combined_results &lt;- do.call(rbind, lapply(fall_date_combined_results, as.data.frame))\n\n\n\n\n\n\nGreen-down Pace\nDefined as the time span (in days) required for the individual tree growing season EVI curves to transition from the green-down 20% threshold to the 80% threshold.\n\n\nCode\ndirection &lt;- \"down\"\nthres &lt;- 0.2\nphe_variable = \"doy_diff\"\ninsert_data = points_with_diff\n\nall_results &lt;- list()\nall_results &lt;- lapply(all_genus, function(genus) {\n  cat(\"Processing genus:\", genus, \"\\n\")\n \n  result &lt;- calculate_partial_correlation(\n    insert_data = insert_data,\n    direction = direction,\n    thres = thres,\n    genus = genus,\n    pre_lengths = pre_lengths,\n    phe_variable = phe_variable,\n    temp_variable = temp_variable\n  )\n  return(result)\n})\n\nfall_pace_preseason_var &lt;- do.call(rbind, lapply(all_results, function(x) x$preseason_var))\nfall_pace_combined_results &lt;- lapply(all_results, function(x) {\n  list(\n    genus = unique(x$preseason_var$genus),\n    optimal_pre_length = x$optimal_pre_length,\n    partial_correlation = x$partial_correlation,\n    partial_corr_pvalue = x$partial_corr_pvalue,\n    pre_length_candidate = x$pre_length_candidate,\n    pre_length_trend = x$pre_length_trend,\n    pvalue_trend = x$pvalue_trend\n  )\n})\nfall_pace_combined_results &lt;- do.call(rbind, lapply(fall_pace_combined_results, as.data.frame))\n\n\n\n\n\n2.3 Optimal preseason length calculated by Tempavg\nFigure 2 displays the distribution of optimal preseason length and partial correlation coefficient calculated by Tempavg for SOS, Greenup pace, EOS and Greenup pace, respectively.\nAs for SOS, all genera have negetive partial correlation coefficients, which means the higher preseason average temperature, the earlier start of season. As for Greenup pace, most genera (except Carya, Celtis) have negetive partial correlation coefficients, which means the higher preseason average temperature, the faster green up pace. The preseason length varies significantly among genera.\nAs for EOS, most genera (except Populus, Platanus) have positive partial correlation coefficients, which means the higher preseason average temperature, the later end of season. As for Greenup pace, there is variation in impact direction among genera. The preseason length also varies significantly among genera.\n\nCode\ntavg_allyear_pcorr &lt;- readRDS(\"~/phenology-urban/data/proc/urban/NY/tavg_allyear_pcorr.rds\") %&gt;%\n  select(genus, optimal_pre_length, partial_correlation, partial_corr_pvalue, type) %&gt;%\n  group_by(genus, optimal_pre_length, partial_correlation, partial_corr_pvalue, type) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(\n    names_from = type,\n    values_from = c(optimal_pre_length, partial_correlation, partial_corr_pvalue)\n  ) %&gt;%\n  mutate(\n    group_spring = case_when(\n      partial_corr_pvalue_SOS &lt;= 0.05 & `partial_corr_pvalue_green-up pace` &lt;= 0.05 ~ \"1\",\n      partial_corr_pvalue_SOS &lt;= 0.05 & `partial_corr_pvalue_green-up pace` &gt; 0.05 ~ \"2\",\n      partial_corr_pvalue_SOS &gt; 0.05 & `partial_corr_pvalue_green-up pace` &lt;= 0.05 ~ \"3\",\n      TRUE ~ \"4\"\n    ),\n    group_fall = case_when(\n      partial_corr_pvalue_EOS &lt;= 0.05 & `partial_corr_pvalue_green-down pace` &lt;= 0.05 ~ \"1\",\n      partial_corr_pvalue_EOS &lt;= 0.05 & `partial_corr_pvalue_green-down pace` &gt; 0.05 ~ \"2\",\n      partial_corr_pvalue_EOS &gt; 0.05 & `partial_corr_pvalue_green-down pace` &lt;= 0.05 ~ \"3\",\n      TRUE ~ \"4\"\n    )\n  )\n\nspring_pcorr_p &lt;- ggplot(tavg_allyear_pcorr, aes(x = partial_correlation_SOS, y = `partial_correlation_green-up pace`, color = group_spring, label = genus)) +\n  geom_point(size = 3) +\n  geom_text(vjust = -0.6, hjust = 0.5) +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"black\") +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"black\") +\n  scale_color_manual(\n    values = c(\"1\" = \"mediumorchid4\", \"2\" = \"lightpink\", \"3\" = \"lightblue1\", \"4\" = \"gray95\"),\n    labels = c(\n      \"1\" = \"Both p-values &lt; 0.05\",\n      \"2\" = \"SOS p-value &lt; 0.05 \\n Green-up p-value &gt; 0.05\",\n      \"3\" = \"SOS p-value &gt; 0.05 \\n Green-up p-value &lt; 0.05\",\n      \"4\" = \"Both p-values &gt; 0.05\"\n    )\n  ) +\n  labs(\n    x = \"Partial correlation coefficient (SOS)\",\n    y = \"Partial correlation coefficient (Green-up pace)\",\n    color = \"Group\",\n    title = \"Distribution of\\npartial correlation coefficient\"\n  ) +\n  theme_minimal()  +\n  theme(legend.position = \"bottom\")\n\nspring_pre_length_p &lt;- ggplot(tavg_allyear_pcorr, aes(x = optimal_pre_length_SOS, y = `optimal_pre_length_green-up pace`, color = group_spring, label = genus)) +\n  geom_point(size = 3) +\n  geom_text(vjust = -0.6, hjust = 0.5) +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"black\") +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"black\") +\n  scale_color_manual(\n    values = c(\"1\" = \"mediumorchid4\", \"2\" = \"lightpink\", \"3\" = \"lightblue1\", \"4\" = \"gray95\"),\n    labels = c(\n      \"1\" = \"Both p-values &lt; 0.05\",\n      \"2\" = \"SOS p-value &lt; 0.05 \\n Green-up p-value &gt; 0.05\",\n      \"3\" = \"SOS p-value &gt; 0.05 \\n Green-up p-value &lt; 0.05\",\n      \"4\" = \"Both p-values &gt; 0.05\"\n    )\n  ) +\n  labs(\n    x = \"Optimal preseason length (SOS)\",\n    y = \"Optimal preseason length (Green-up Pace)\",\n    color = \"Group\",\n    title = \"Distribution of preseason length\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n\nfall_pcorr_p &lt;- ggplot(tavg_allyear_pcorr, aes(x = partial_correlation_EOS, y = `partial_correlation_green-down pace`, color = group_fall, label = genus)) +\n  geom_point(size = 3) +\n  geom_text(vjust = -0.6, hjust = 0.5) +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"black\") +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"black\") +\n  scale_color_manual(\n    values = c(\"1\" = \"mediumorchid4\", \"2\" = \"lightpink\", \"3\" = \"lightblue1\", \"4\" = \"gray95\"),\n    labels = c(\n      \"1\" = \"Both p-values &lt; 0.05\",\n      \"2\" = \"EOS p-value &lt; 0.05 \\n Green-down p-value &gt; 0.05\",\n      \"3\" = \"EOS p-value &gt; 0.05 \\n Green-down p-value &lt; 0.05\",\n      \"4\" = \"Both p-values &gt; 0.05\"\n    )\n  ) +\n  labs(\n    x = \"Partial correlation coefficient (EOS)\",\n    y = \"Partial correlation coefficient (Green-down pace)\",\n    color = \"Group\",\n    title = \"Distribution of\\npartial correlation coefficient\"\n  ) +\n  theme_minimal()  +\n  theme(legend.position = \"bottom\")\n\nfall_pre_length_p &lt;- ggplot(tavg_allyear_pcorr, aes(x = optimal_pre_length_EOS, y = `optimal_pre_length_green-down pace`, color = group_fall, label = genus)) +\n  geom_point(size = 3) +\n  geom_text(vjust = -0.6, hjust = 0.5) +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"black\") +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"black\") +\n  scale_color_manual(\n    values = c(\"1\" = \"mediumorchid4\", \"2\" = \"lightpink\", \"3\" = \"lightblue1\", \"4\" = \"gray95\"),\n    labels = c(\n      \"1\" = \"Both p-values &lt; 0.05\",\n      \"2\" = \"EOS p-value &lt; 0.05 \\n Green-down p-value &gt; 0.05\",\n      \"3\" = \"EOS p-value &gt; 0.05 \\n Green-down p-value &lt; 0.05\",\n      \"4\" = \"Both p-values &gt; 0.05\"\n    )\n  ) +\n  labs(\n    x = \"Optimal preseason length (EOS)\",\n    y = \"Optimal preseason length (Green-down Pace)\",\n    color = \"Group\",\n    title = \"Distribution of preseason length\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n\nspring_pcorr_p + spring_pre_length_p + plot_layout(guides = \"collect\") & theme(legend.position = \"bottom\")\nfall_pcorr_p + fall_pre_length_p + plot_layout(guides = \"collect\") & theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Spring phenology\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) Fall phenology\n\n\n\n\n\n\n\nFigure 2: Distribution of partial correlation coefficient and preseason length, calculated by Tempavg"
  },
  {
    "objectID": "workflow_micro_NYC.html#spatial-pattern-sos-tavg",
    "href": "workflow_micro_NYC.html#spatial-pattern-sos-tavg",
    "title": "workflow_micro_NYC",
    "section": "3 Spatial pattern (SOS ~ Tavg)",
    "text": "3 Spatial pattern (SOS ~ Tavg)\n\n3.1 Check spatial autocorrelation\nBoth fixed-effect model and mixed-effects model have heterogeneous residuals. Global Moran I for regression residuals test indicates the presence of spatial autocorrelation in the residuals. Lagrange Multiplier test suggests the spatial model should be applied.\n\n\nCode\ntavg_allyear_var &lt;- readRDS(\"~/phenology-urban/data/proc/urban/NY/tavg_allyear_var.rds\")\ngenera &lt;- unique(tavg_allyear_var$genus)\nvariogram_results &lt;- list()\nfor (i in 1:14) {\n  genus = genera[i]\n  tavg_SOS &lt;- tavg_allyear_var %&gt;%\n    filter(direction == \"up\" & thres == 0.5 & genus == !!genus) %&gt;%\n    na.omit()\n  random_OLS &lt;- lmer(doy ~ AvgTemp_mean + Sum_mm_sum + srad_mean + (1|year), data = tavg_SOS)\n  print(check_heteroscedasticity(random_OLS))\n  tavg_SOS$residual_random &lt;- tavg_SOS$doy - fitted(random_OLS)\n  \n  coordinates(tavg_SOS) &lt;- ~ lon + lat\n  vgm.emt &lt;- variogram(residual_random ~ 1, tavg_SOS, cloud = FALSE)\n  vgm.las.init &lt;- vgm(model = c(\"Exp\", \"Sph\", \"Gau\", \"Mat\"))\n  vgm_exn_fit &lt;- fit.variogram(vgm.emt, vgm.las.init)\n  variogram_results[[i]] &lt;- data.frame(\n    genus = genus,\n    model = vgm_exn_fit$model,\n    psill = vgm_exn_fit$psill,\n    range = vgm_exn_fit$range\n  )\n}\n\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p &lt; .001).\n\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p &lt; .001).\n\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p &lt; .001).\n\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p &lt; .001).\n\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p &lt; .001).\n\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p &lt; .001).\n\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p &lt; .001).\n\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p &lt; .001).\n\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p &lt; .001).\n\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p &lt; .001).\n\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p &lt; .001).\n\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p &lt; .001).\n\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p &lt; .001).\n\n\nOK: Error variance appears to be homoscedastic (p = 0.826).\n\n\nCode\nvariogram_summary &lt;- do.call(rbind, variogram_results)\nkable(variogram_summary, caption = \"Fitted semivariogram model for each genus\")\n\n\n\nFitted semivariogram model for each genus\n\n\ngenus\nmodel\npsill\nrange\n\n\n\n\nCarya\nSph\n119.539553\n0.0094942\n\n\nAcer\nSph\n95.395099\n-0.0375294\n\n\nQuercus\nSph\n91.362932\n-0.0532885\n\n\nPlatanus\nSph\n35.766955\n-0.0209021\n\n\nJuglans\nMat\n62.373693\n0.0012231\n\n\nLiquidambar\nSph\n63.214989\n0.0097814\n\n\nBetula\nMat\n82.330152\n-0.0272595\n\n\nPopulus\nMat\n37.382824\n-0.0000106\n\n\nMorus\nExp\n152.724414\n0.0010145\n\n\nUlmus\nSph\n106.504789\n-0.2291773\n\n\nFraxinus\nMat\n27.600177\n-0.0063073\n\n\nCeltis\nMat\n64.975068\n-0.0183950\n\n\nSalix\nMat\n86.863874\n-0.0014266\n\n\nAlnus\nSph\n9.277417\n0.0000048\n\n\n\n\n\n\n\n3.2 Spatial statistical model using spBayes\nWe modeled the relationship between the day of year (()) and environmental covariates using a spatial hierarchical model. The response variable at location (_i), denoted as (y(_i)), was modeled as follows:\n\\[y(\\mathbf{s}_i) = \\mu(\\mathbf{s}_i) + w(\\mathbf{s}_i) + u_{\\text{year}(i)} + \\epsilon(\\mathbf{s}_i)\\]\nwhere:\n\nFixed Effects: \\[\\mu(\\mathbf{s}_i) = \\mathbf{X}_i \\boldsymbol{\\beta}\\]\n\n\\(\\mathbf{X}_i = [1, \\text{AvgTemp}, \\text{Precp}, \\text{srad}]\\) is the design matrix of predictors.\n\\(\\boldsymbol{\\beta} = [\\beta_0, \\beta_1, \\beta_2, \\beta_3]\\) are the regression coefficients for the intercept and covariates.\n\nSpatially Correlated Random Effect: \\[w(\\mathbf{s}_i) \\sim \\text{MVN}(\\mathbf{0}, \\mathbf{R} \\cdot \\sigma^2)\\]\n\n\\(\\mathbf{R}\\) is the spatial correlation matrix defined by a covariance function:\nMatérn Covariance Function (if selected): \\[\\mathbf{R}_{ij} = \\sigma^2 \\cdot \\frac{2^{1-\\nu}}{\\Gamma(\\nu)} \\left(\\frac{\\sqrt{2\\nu} D_{ij}}{\\rho}\\right)^\\nu K_\\nu\\left(\\frac{\\sqrt{2\\nu} D_{ij}}{\\rho}\\right)\\]\nExponential Covariance Function (if selected): \\[\\mathbf{R}_{ij} = \\sigma^2 \\cdot \\exp(-\\phi D_{ij})\\]\nGaussian Covariance Function (if selected): \\[\\mathbf{R}_{ij} = \\sigma^2 \\cdot \\exp(-\\phi D_{ij}^2)\\]\nSpherical Covariance Function (if selected): \\(\\rho\\) is the range\n\n\\[\\mathbf{R}_{ij} =\n        \\begin{cases}\n        \\sigma^2 \\cdot \\left(1 - \\frac{3 D_{ij}}{2\\rho} + \\frac{D_{ij}^3}{2\\rho ^3}\\right), & D_{ij} \\leq \\rho \\\\\n        0, & D_{ij} &gt; \\rho\n        \\end{cases}\\]\nYear-specific Random Effect: \\[u_{\\text{year}(i)} \\sim \\text{N}(0, \\tau^2_{\\text{year}})\\]\n\n\\(u\\_{\\text{year}(i)}\\) captures year-to-year variability, with \\(\\tau^2\\_{\\text{year}}\\) being the variance of the year effect.\n\nIndependent Nugget Effect: \\[\\epsilon(\\mathbf{s}_i) \\sim \\text{N}(0, \\tau^2)\\]\n\n\\(\\epsilon(\\mathbf{s}\\_i)\\) accounts for measurement error or small-scale variability.\n\n\n\nPrior Distributions\n\\[\\boldsymbol{\\beta} \\sim \\text{MVN}(\\mathbf{0}, 1000\\mathbf{I})\\]\n\\[\\sigma^2 \\sim \\text{Inverse-Gamma}(2.5, 120)\\]\n\\[\\phi \\sim \\text{Uniform}(5, 50) \\quad \\text{(Exponential or Gaussian covariance)}\\]\n\\[\\nu \\sim \\text{Uniform}(0.5, 5) \\quad \\text{(Matérn covariance only)}\\]\n\\[\\rho \\sim \\text{Uniform}(0, 1) \\quad \\text{(Matérn or Spherical covariance)}\\]\n\\[\\tau^2 \\sim \\text{Inverse-Gamma}(0.001, 0.001)\\]\n\\[\\tau^2_{\\text{year}} \\sim \\text{Inverse-Gamma}(2.001, 0.667)\\]\n\nProblem with year (replicate location):\n\nTreat year as random effect\n\nProblem with genus:\n\nFit each genus separately\n\n\nNY SOS\n\n\nCode\ndir_path &lt;- \"~/phenology-urban/data/proc/urban/sp_model/\"\nfiles &lt;- list.files(dir_path, pattern = \"^NY.*SOS\\\\.rds$\", full.names = TRUE)\nplots &lt;- list()\n\nfor (file in files) {\n  model_data &lt;- readRDS(file)\n  genus &lt;- sub(\".*NY_(.*?)_tavg_SOS\\\\.rds\", \"\\\\1\", basename(file))\n  beta_label &lt;- data.frame(Parameter = \"beta[2]\", Label = \"AvgTemp\")\n  param_data &lt;- ggs(model_data$samples, par_labels = beta_label) %&gt;%\n    filter(Parameter == \"AvgTemp\")\n  beta_median &lt;- median(param_data$value)\n  p &lt;- param_data %&gt;%\n    ggs_density() +\n    theme_bw() +\n    ggtitle(paste(\"Genus:\", genus)) +\n    theme(plot.title = element_text(hjust = 0.5)) +\n    annotate(\"text\", x = beta_median, y = 0, label = paste0(\"Median: \", round(beta_median, 2)),vjust = -1.5, color = \"red\", size = 4)\n  plots[[genus]] &lt;- p\n}\n\ncombined_plot &lt;- wrap_plots(plots, ncol = 2)\ncombined_plot\n\n\n\n\n\n\n\n\nFigure 3: The density of the posterior distribution of regression coefficients for Temp~avg~ with SOS as the response variable for each genus in New York city."
  }
]